(function(root) {
  root.SessionForm = React.createClass({
    mixins: [ReactRouter.History, React.addons.LinkedStateMixin],
    getInitialState: function () {
      return {errorMessages: "", email: "", password: "" };
    },
    componentWillMount: function () {
      if (CurrentUserStore.isLoggedIn()) {
        this.history.pushState(null, "/");
      }
    },

    submit: function (e) {
      e.preventDefault();
      var redirectToMain = function () {
        this.history.pushState(null, "/p");
      }.bind(this);

      var showErrors = function (data) {
        this.setState({errorMessages: data.responseJSON.errors});
      }.bind(this);

      var credentials = $(e.currentTarget).serializeJSON();

      SessionsApiUtil.login(credentials, redirectToMain, showErrors);
    },
    validationErrors: function () {
      if (this.state.errorMessages.length > 0) {
        return(
          <span className="error-text">
          {
            this.state.errorMessages.map(function (message) {
              return(<p>{message}</p>);
            }.bind(this))
          }
        </span>
        );
      }
    },
    demoUser: function (e) {
      e.preventDefault();
      this.setState({email: "DemoUser@pagevault.io", password: "password"});
    },

    render: function() {
      var demoUsers;
      if (this.state.users) {
        demoUsers = <span>
                      <h4>Demo accounts</h4>
                      {this.state.users.map(function (user) {
                          return <p key={user.id}>{user.email}</p>;
                        }.bind(this))}
                    </span>;
      }
      return (
      <div className="modal-bg">
        <div className="modal loginform group">
          <div>
            <form onSubmit={ this.submit }>
              <img src="<%= image_url('logo-big.svg') %>" />
              <br/>
              <label>
                Email
                <br></br>
                <input type="text" name="user[email]" valueLink={this.linkState('email')}/>
              </label>

              <label>
                Password
                <br></br>
                <input type="password" name="user[password]" valueLink={this.linkState('password')} />
              </label>
              <br></br>
              {this.validationErrors()}
              <button>Log In</button>
              <button onClick={this.demoUser} className="demo-user">Demo User</button>
              <p>or</p>
              <a href="#/register">Register</a>

            </form>
          </div>
        </div>
      </div>
      );
    },

  });
})(this);
